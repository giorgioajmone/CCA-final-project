=== Generated schedule for mkMainMem ===

Method schedule
---------------
Method: put
Ready signal: (! doHalt) && (bram_serverAdapter_cnt .< 3'd3)
Conflict-free: get, restart, halted, restarted, request, response
Sequenced before: halt
Conflicts: put
 
Method: get
Ready signal: (! doHalt) && dl_d_19_rv.port0__read[512]
Conflict-free: put, restart, halted, restarted, request, response
Sequenced before (restricted): halt
Conflicts: get
 
Method: halt
Ready signal: ! doHalt
Conflict-free: restart, halted, request, response
Sequenced after: put, restarted
Sequenced after (restricted): get
Conflicts: halt
 
Method: restart
Ready signal: doHalt
Conflict-free: put, get, halt, restarted, response
Sequenced after: halted, request
Conflicts: restart
 
Method: halted
Ready signal: doHalt
Conflict-free: put, get, halt, halted, restarted, request, response
Sequenced before: restart
 
Method: restarted
Ready signal: ! doHalt
Conflict-free: put, get, restart, halted, restarted, request, response
Sequenced before: halt
 
Method: request
Ready signal: doHalt && (bram_serverAdapter_cnt .< 3'd3)
Conflict-free: put, get, halt, halted, restarted, response
Sequenced before: restart
Conflicts: request
 
Method: response
Ready signal: responseFIFO_rv.port1__read[512]
Conflict-free: put, get, halt, restart, halted, restarted, request
Conflicts: response
 
Rule schedule
-------------
Rule: bram_serverAdapter_outData_enqueue
Predicate: bram_serverAdapter_outData_enqw.whas &&
	   ((! bram_serverAdapter_outData_dequeueing.whas) ||
	    bram_serverAdapter_outData_ff.i_notEmpty)
Blocking rules: (none)
 
Rule: bram_serverAdapter_outData_dequeue
Predicate: bram_serverAdapter_outData_dequeueing.whas &&
	   bram_serverAdapter_outData_ff.i_notEmpty
Blocking rules: (none)
 
Rule: bram_serverAdapter_cnt_finalAdd
Predicate: bram_serverAdapter_cnt_1.whas || bram_serverAdapter_cnt_2.whas ||
	   bram_serverAdapter_cnt_3.whas
Blocking rules: (none)
 
Rule: bram_serverAdapter_s1__dreg_update
Predicate: True
Blocking rules: (none)
 
Rule: bram_serverAdapter_stageReadResponseAlways
Predicate: bram_serverAdapter_writeWithResp.whas
Blocking rules: (none)
 
Rule: bram_serverAdapter_moveToOutFIFO
Predicate: ((! bram_serverAdapter_s1[0]) ||
	    bram_serverAdapter_outData_ff.i_notFull) &&
	   bram_serverAdapter_s1[1]
Blocking rules: (none)
 
Rule: bram_serverAdapter_overRun
Predicate: bram_serverAdapter_s1[1] &&
	   ((! bram_serverAdapter_outData_beforeEnq.read) ||
	    (! bram_serverAdapter_outData_beforeDeq.read) ||
	    (! bram_serverAdapter_outData_ff.i_notFull))
Blocking rules: (none)
 
Rule: dl_try_move
Predicate: True
Blocking rules: (none)
 
Rule: dl_try_move_1
Predicate: True
Blocking rules: (none)
 
Rule: dl_try_move_2
Predicate: True
Blocking rules: (none)
 
Rule: dl_try_move_3
Predicate: True
Blocking rules: (none)
 
Rule: dl_try_move_4
Predicate: True
Blocking rules: (none)
 
Rule: dl_try_move_5
Predicate: True
Blocking rules: (none)
 
Rule: dl_try_move_6
Predicate: True
Blocking rules: (none)
 
Rule: dl_try_move_7
Predicate: True
Blocking rules: (none)
 
Rule: dl_try_move_8
Predicate: True
Blocking rules: (none)
 
Rule: dl_try_move_9
Predicate: True
Blocking rules: (none)
 
Rule: dl_try_move_10
Predicate: True
Blocking rules: (none)
 
Rule: dl_try_move_11
Predicate: True
Blocking rules: (none)
 
Rule: dl_try_move_12
Predicate: True
Blocking rules: (none)
 
Rule: dl_try_move_13
Predicate: True
Blocking rules: (none)
 
Rule: dl_try_move_14
Predicate: True
Blocking rules: (none)
 
Rule: dl_try_move_15
Predicate: True
Blocking rules: (none)
 
Rule: dl_try_move_16
Predicate: True
Blocking rules: (none)
 
Rule: dl_try_move_17
Predicate: True
Blocking rules: (none)
 
Rule: dl_try_move_18
Predicate: True
Blocking rules: (none)
 
Rule: deq
Predicate: bram_serverAdapter_outData_beforeDeq.read &&
	   (bram_serverAdapter_outData_ff.i_notEmpty ||
	    bram_serverAdapter_outData_enqw.whas) &&
	   (! dl_d_0_rv.port1__read[512]) &&
	   (! doHalt)
Blocking rules: (none)
 
Rule: waitResponse
Predicate: bram_serverAdapter_outData_beforeDeq.read &&
	   (bram_serverAdapter_outData_ff.i_notEmpty ||
	    bram_serverAdapter_outData_enqw.whas) &&
	   (! responseFIFO_rv.port0__read[512]) &&
	   doHalt
Blocking rules: (none)
 
Logical execution order: put,
			 get,
			 halted,
			 restarted,
			 request,
			 bram_serverAdapter_stageReadResponseAlways,
			 bram_serverAdapter_overRun,
			 bram_serverAdapter_moveToOutFIFO,
			 waitResponse,
			 restart,
			 response,
			 bram_serverAdapter_s1__dreg_update,
			 dl_try_move,
			 dl_try_move_1,
			 dl_try_move_2,
			 dl_try_move_3,
			 dl_try_move_4,
			 dl_try_move_5,
			 dl_try_move_6,
			 dl_try_move_7,
			 dl_try_move_8,
			 dl_try_move_9,
			 dl_try_move_10,
			 dl_try_move_11,
			 dl_try_move_12,
			 dl_try_move_13,
			 dl_try_move_14,
			 dl_try_move_15,
			 dl_try_move_16,
			 dl_try_move_17,
			 dl_try_move_18,
			 deq,
			 halt,
			 bram_serverAdapter_outData_enqueue,
			 bram_serverAdapter_outData_dequeue,
			 bram_serverAdapter_cnt_finalAdd

=========================================
